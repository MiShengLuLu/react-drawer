// 文本不换行，超出部分以省略号显示
@mixin  ellipsis {
  width: auto;
  overflow: hidden;
  text-overflow: ellipsis;// 用一个省略好(...)来表示被截断的文本
  white-space: nowrap;
}


// 1px 实现
@mixin scale-hairline-common($color, $top, $right, $bottom, $left) {
  content: "";
  position: absolute;
  background-color: $color;
  display: block;
  z-index: 1;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

@mixin hairline($direction, $color: $border-color-base, $radius: 0) {
  border-#{$direction}: 1px solid $color;
  @if $direction == "all" {
    border-radius: $radius;
  }
  html:not([data-scale]) & {
    @media (min-resolution: 2dppx) {
      border-#{$direction}: none;

      @if $direction == top {
        &::before {
          @include scale-hairline-common($color, 0, auto, auto, 0);
          width: 100%;
          height: 1px;
          transform-origin: 50% 50%;
          transform: scaleY(0.5);

          @media (min-resolution: 3dppx) {
            transform: scaleY(0.33);
          }
        }
      } @else if $direction == right {
        &::after {
          @include scale-hairline-common($color, 0, 0, auto, auto);
          width: 1px;
          height: 100%;
          background: $color;
          transform-origin: 100% 50%;
          transform: scaleX(0.5);

          @media (min-resolution: 3dppx) {
            transform: scaleX(0.33);
          }
        }
      } @else if $direction == bottom {
        &::after {
          @include scale-hairline-common($color, auto, auto, 0, 0);
          width: 100%;
          height: 1px;
          transform-origin: 50% 100%;
          transform: scaleY(0.5);

          @media (min-resolution: 3dppx) {
            transform: scaleY(0.33);
          }
        }
      } @else if $direction == left {
        &::before {
          @include scale-hairline-common($color, 0, auto, auto, 0);
          width: 1px;
          height: 100%;
          transform-origin: 100% 50%;
          transform: scaleX(0.5);

          @media (min-resolution: 3dppx) {
            transform: scaleX(0.33);
          }
        }
      } @else if $direction == all {
        &::before {
          content: "";
          position: absolute;
          left: 0;
          top: 0;
          width: 200%;
          height: 200%;
          border: 1px solid $color;
          border-radius: $radius * 2;
          transform-origin: 0 0;
          transform: scale(0.5);
          box-sizing: border-box;
          pointer-events: none;

          // @media (min-resolution: 3dppx) {
          //   width: 300%;
          //   height: 300%;
          //   border-radius: @radius * 3;
          //   transform: scale(0.33);
          // }
        }
      }
    }
  }
}
